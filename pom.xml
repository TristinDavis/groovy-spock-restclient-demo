<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.demo</groupId>	
	<version>0.0.1-SNAPSHOT</version>
	<artifactId>groovy-spock-restclient-demo</artifactId>
	<name>Groovy-Spock-RESTClient test framework demo</name>
	<repositories>
		<repository>
			<id>Codehaus</id>
			<url>http://repository.codehaus.org</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>0.5-groovy-1.8</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.8.4</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy.modules.http-builder</groupId>
			<artifactId>http-builder</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>groovy</artifactId>
					<groupId>org.codehaus.groovy</groupId>
				</exclusion>
			</exclusions>
			<version>0.5.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<version>4.10</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<compilerId>groovy-eclipse-compiler</compilerId>
					<verbose>true</verbose>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.6.0-01</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement><!-- Rather than just a "plugins" element, we wrap them 
				in a "pluginManagement" element See http://maven.apache.org/pom.html#Plugin_Management 
				for more info. We might not need to do this. -->
			<plugins>
				<!-- See http://stackoverflow.com/questions/6352208/how-to-solve-plugin-execution-not-covered-by-lifecycle-configuration-for-spring 
					for why we need this plugin (QueryDSL APT processor configuration requires 
					it due to problems with m2e eclipse plugin -->
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>
</project>
